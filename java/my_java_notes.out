\BOOKMARK [-1][-]{part.1}{I Intro}{}% 1
\BOOKMARK [0][-]{chapter.1}{TODOs}{part.1}% 2
\BOOKMARK [1][-]{section.1.1}{Readings}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{Research Topics and Tasks}{chapter.1}% 4
\BOOKMARK [0][-]{chapter.2}{Resources}{part.1}% 5
\BOOKMARK [-1][-]{part.2}{II Basics}{}% 6
\BOOKMARK [0][-]{chapter.3}{Overview}{part.2}% 7
\BOOKMARK [0][-]{chapter.4}{Identifiers}{part.2}% 8
\BOOKMARK [1][-]{section.4.1}{Informal Single-Letter Local Variables Naming}{chapter.4}% 9
\BOOKMARK [1][-]{section.4.2}{Scope Rules}{chapter.4}% 10
\BOOKMARK [2][-]{subsection.4.2.1}{Name Conflicts.}{section.4.2}% 11
\BOOKMARK [0][-]{chapter.5}{Modifiers}{part.2}% 12
\BOOKMARK [1][-]{section.5.1}{Access Modifiers}{chapter.5}% 13
\BOOKMARK [1][-]{section.5.2}{Recommendation on How to Use Access Modifiers}{chapter.5}% 14
\BOOKMARK [2][-]{subsection.5.2.1}{public}{section.5.2}% 15
\BOOKMARK [2][-]{subsection.5.2.2}{protected}{section.5.2}% 16
\BOOKMARK [1][-]{section.5.3}{Other modifiers}{chapter.5}% 17
\BOOKMARK [0][-]{chapter.6}{Primitive Types}{part.2}% 18
\BOOKMARK [1][-]{section.6.1}{List of Types}{chapter.6}% 19
\BOOKMARK [1][-]{section.6.2}{Conversion}{chapter.6}% 20
\BOOKMARK [1][-]{section.6.3}{Primitive Type Specialisation \(from java8\)}{chapter.6}% 21
\BOOKMARK [0][-]{chapter.7}{Reference Types}{part.2}% 22
\BOOKMARK [1][-]{section.7.1}{List of Reference Types}{chapter.7}% 23
\BOOKMARK [1][-]{section.7.2}{Reference vs Primitive Types}{chapter.7}% 24
\BOOKMARK [1][-]{section.7.3}{Default Values}{chapter.7}% 25
\BOOKMARK [2][-]{subsection.7.3.1}{Objects}{section.7.3}% 26
\BOOKMARK [2][-]{subsection.7.3.2}{Arrays}{section.7.3}% 27
\BOOKMARK [1][-]{section.7.4}{Object Instantiation}{chapter.7}% 28
\BOOKMARK [2][-]{subsection.7.4.1}{Class Loading}{section.7.4}% 29
\BOOKMARK [2][-]{subsection.7.4.2}{Static Initialsation}{section.7.4}% 30
\BOOKMARK [2][-]{subsection.7.4.3}{Class Variables Initialisation}{section.7.4}% 31
\BOOKMARK [2][-]{subsection.7.4.4}{Constructor Calls}{section.7.4}% 32
\BOOKMARK [1][-]{section.7.5}{Cloning}{chapter.7}% 33
\BOOKMARK [2][-]{subsection.7.5.1}{Overview}{section.7.5}% 34
\BOOKMARK [2][-]{subsection.7.5.2}{Switching Cloneability}{section.7.5}% 35
\BOOKMARK [2][-]{subsection.7.5.3}{Shallow Cloning}{section.7.5}% 36
\BOOKMARK [2][-]{subsection.7.5.4}{Deep Cloning}{section.7.5}% 37
\BOOKMARK [2][-]{subsection.7.5.5}{Serialisation and Copy Constructor}{section.7.5}% 38
\BOOKMARK [0][-]{chapter.8}{Arrays}{part.2}% 39
\BOOKMARK [1][-]{section.8.1}{Permitted Element types}{chapter.8}% 40
\BOOKMARK [1][-]{section.8.2}{Definition, Instantiation, Initialisation}{chapter.8}% 41
\BOOKMARK [2][-]{subsection.8.2.1}{Definition}{section.8.2}% 42
\BOOKMARK [2][-]{subsection.8.2.2}{Instantiation}{section.8.2}% 43
\BOOKMARK [2][-]{subsection.8.2.3}{Initialisation}{section.8.2}% 44
\BOOKMARK [1][-]{section.8.3}{Anonymous Arrays}{chapter.8}% 45
\BOOKMARK [1][-]{section.8.4}{Converting a List to an Array}{chapter.8}% 46
\BOOKMARK [2][-]{subsection.8.4.1}{list.toArray\(\)}{section.8.4}% 47
\BOOKMARK [2][-]{subsection.8.4.2}{list.toArray\(T[]\)}{section.8.4}% 48
\BOOKMARK [2][-]{subsection.8.4.3}{list.stream\(\).toArray\(T::new\);}{section.8.4}% 49
\BOOKMARK [1][-]{section.8.5}{Type Conversion}{chapter.8}% 50
\BOOKMARK [0][-]{chapter.9}{if/else}{part.2}% 51
\BOOKMARK [1][-]{section.9.1}{Nested if's problem}{chapter.9}% 52
\BOOKMARK [1][-]{section.9.2}{else if}{chapter.9}% 53
\BOOKMARK [0][-]{chapter.10}{Switch Statement}{part.2}% 54
\BOOKMARK [0][-]{chapter.11}{Labels}{part.2}% 55
\BOOKMARK [0][-]{chapter.12}{Text-based User Input}{part.2}% 56
\BOOKMARK [1][-]{section.12.1}{Program Arguments}{chapter.12}% 57
\BOOKMARK [1][-]{section.12.2}{Using an Object of Scanner Class}{chapter.12}% 58
\BOOKMARK [2][-]{subsection.12.2.1}{Conversions}{section.12.2}% 59
\BOOKMARK [2][-]{subsection.12.2.2}{Comparison Objects}{section.12.2}% 60
\BOOKMARK [2][-]{subsection.12.2.3}{Comparing String Objects}{section.12.2}% 61
\BOOKMARK [2][-]{subsection.12.2.4}{Copying}{section.12.2}% 62
\BOOKMARK [0][-]{chapter.13}{Constructors}{part.2}% 63
\BOOKMARK [1][-]{section.13.1}{Constructor Chaining}{chapter.13}% 64
\BOOKMARK [1][-]{section.13.2}{Practices}{chapter.13}% 65
\BOOKMARK [2][-]{subsection.13.2.1}{Define no-arg Constructor when a Constructor Taking Arguments Is Present }{section.13.2}% 66
\BOOKMARK [2][-]{subsection.13.2.2}{Never Call Overridable Method from within a Constructor}{section.13.2}% 67
\BOOKMARK [0][-]{chapter.14}{this}{part.2}% 68
\BOOKMARK [0][-]{chapter.15}{super}{part.2}% 69
\BOOKMARK [1][-]{section.15.1}{super.a\(\) vs. \(\(<T>\)this\).a\(\)}{chapter.15}% 70
\BOOKMARK [0][-]{chapter.16}{Exceptions}{part.2}% 71
\BOOKMARK [1][-]{section.16.1}{Types}{chapter.16}% 72
\BOOKMARK [1][-]{section.16.2}{Try Blocks}{chapter.16}% 73
\BOOKMARK [1][-]{section.16.3}{Important Points}{chapter.16}% 74
\BOOKMARK [1][-]{section.16.4}{Catch or Declare Rule}{chapter.16}% 75
\BOOKMARK [1][-]{section.16.5}{Overriding a method Throwing an Exception}{chapter.16}% 76
\BOOKMARK [1][-]{section.16.6}{Custom Exception}{chapter.16}% 77
\BOOKMARK [1][-]{section.16.7}{Useful methods}{chapter.16}% 78
\BOOKMARK [0][-]{chapter.17}{Abstract Classes \046 Methods}{part.2}% 79
\BOOKMARK [1][-]{section.17.1}{Usage}{chapter.17}% 80
\BOOKMARK [1][-]{section.17.2}{Abstract Classes vs interfaces}{chapter.17}% 81
\BOOKMARK [0][-]{chapter.18}{Varargs}{part.2}% 82
\BOOKMARK [0][-]{chapter.19}{Static}{part.2}% 83
\BOOKMARK [1][-]{section.19.1}{Usage}{chapter.19}% 84
\BOOKMARK [1][-]{section.19.2}{Static Initialisers}{chapter.19}% 85
\BOOKMARK [0][-]{chapter.20}{Interfaces}{part.2}% 86
\BOOKMARK [1][-]{section.20.1}{Interfaces vs Abstract Classes}{chapter.20}% 87
\BOOKMARK [0][-]{chapter.21}{Enumerations}{part.2}% 88
\BOOKMARK [1][-]{section.21.1}{values\(\)}{chapter.21}% 89
\BOOKMARK [0][-]{chapter.22}{Annotations}{part.2}% 90
\BOOKMARK [1][-]{section.22.1}{Built-in}{chapter.22}% 91
\BOOKMARK [0][-]{chapter.23}{Inner Classes}{part.2}% 92
\BOOKMARK [1][-]{section.23.1}{Overview}{chapter.23}% 93
\BOOKMARK [1][-]{section.23.2}{localisation within a Code}{chapter.23}% 94
\BOOKMARK [1][-]{section.23.3}{Motivation}{chapter.23}% 95
\BOOKMARK [0][-]{chapter.24}{Inner Static Class}{part.2}% 96
\BOOKMARK [1][-]{section.24.1}{Overview}{chapter.24}% 97
\BOOKMARK [-1][-]{part.3}{III IO}{}% 98
\BOOKMARK [0][-]{chapter.25}{Reading a File - BufferedReader}{part.3}% 99
\BOOKMARK [0][-]{chapter.26}{Writing to a File}{part.3}% 100
\BOOKMARK [0][-]{chapter.27}{Serialisation}{part.3}% 101
\BOOKMARK [1][-]{section.27.1}{Writing - ObjectOutputStream.writeObject\(Object o\)}{chapter.27}% 102
\BOOKMARK [1][-]{section.27.2}{Reading - ObjectInputStream.readObject\(Object o\)}{chapter.27}% 103
\BOOKMARK [-1][-]{part.4}{IV Collections}{}% 104
\BOOKMARK [0][-]{chapter.28}{Iterator}{part.4}% 105
\BOOKMARK [0][-]{chapter.29}{Common Methods}{part.4}% 106
\BOOKMARK [0][-]{chapter.30}{Map}{part.4}% 107
\BOOKMARK [1][-]{section.30.1}{Literal Initialisation}{chapter.30}% 108
\BOOKMARK [1][-]{section.30.2}{HashMap}{chapter.30}% 109
\BOOKMARK [0][-]{chapter.31}{ArrayList}{part.4}% 110
\BOOKMARK [1][-]{section.31.1}{Converting a List to an Array}{chapter.31}% 111
\BOOKMARK [2][-]{subsection.31.1.1}{list.toArray\(\)}{section.31.1}% 112
\BOOKMARK [2][-]{subsection.31.1.2}{list.toArray\(T[]\)}{section.31.1}% 113
\BOOKMARK [2][-]{subsection.31.1.3}{list.stream\(\).toArray\(T[]::new\);}{section.31.1}% 114
\BOOKMARK [-1][-]{part.5}{V OOP}{}% 115
\BOOKMARK [0][-]{chapter.32}{Resources}{part.5}% 116
\BOOKMARK [0][-]{chapter.33}{Abstraction}{part.5}% 117
\BOOKMARK [0][-]{chapter.34}{Inheritance}{part.5}% 118
\BOOKMARK [1][-]{section.34.1}{Accessing Members}{chapter.34}% 119
\BOOKMARK [1][-]{section.34.2}{Pitfalls}{chapter.34}% 120
\BOOKMARK [2][-]{subsection.34.2.1}{Constructor Calls an Overridable Method}{section.34.2}% 121
\BOOKMARK [0][-]{chapter.35}{Encapsulation}{part.5}% 122
\BOOKMARK [0][-]{chapter.36}{Polymorphism , Method Overriding}{part.5}% 123
\BOOKMARK [1][-]{section.36.1}{Liskov Substitution Principle}{chapter.36}% 124
\BOOKMARK [1][-]{section.36.2}{Virtual method Invocation}{chapter.36}% 125
\BOOKMARK [0][-]{chapter.37}{Method Overloading}{part.5}% 126
\BOOKMARK [0][-]{chapter.38}{Method Overriding}{part.5}% 127
\BOOKMARK [-1][-]{part.6}{VI Lambda Expressions}{}% 128
\BOOKMARK [0][-]{chapter.39}{Lambda Expressions}{part.6}% 129
\BOOKMARK [1][-]{section.39.1}{Motivation}{chapter.39}% 130
\BOOKMARK [1][-]{section.39.2}{Lambda Expressions - Overview}{chapter.39}% 131
\BOOKMARK [1][-]{section.39.3}{Target Type, Type Inference}{chapter.39}% 132
\BOOKMARK [1][-]{section.39.4}{Use of External values by Lambda}{chapter.39}% 133
\BOOKMARK [1][-]{section.39.5}{Lambda Graphically}{chapter.39}% 134
\BOOKMARK [1][-]{section.39.6}{SAMs, Core Functional Interfaces}{chapter.39}% 135
\BOOKMARK [1][-]{section.39.7}{Custom Functional Interfaces}{chapter.39}% 136
\BOOKMARK [1][-]{section.39.8}{Method References}{chapter.39}% 137
\BOOKMARK [2][-]{subsection.39.8.1}{Static Method Reference}{section.39.8}% 138
\BOOKMARK [2][-]{subsection.39.8.2}{Instance Method Reference}{section.39.8}% 139
\BOOKMARK [2][-]{subsection.39.8.3}{Referencing a Method of an Arbitrary Object of a Particular Type}{section.39.8}% 140
\BOOKMARK [2][-]{subsection.39.8.4}{Referencing a Constructor}{section.39.8}% 141
\BOOKMARK [2][-]{subsection.39.8.5}{Applications}{section.39.8}% 142
\BOOKMARK [1][-]{section.39.9}{Overloading}{chapter.39}% 143
\BOOKMARK [-1][-]{part.7}{VII Aggregate Operations \(streams\)}{}% 144
\BOOKMARK [0][-]{chapter.40}{Motivation}{part.7}% 145
\BOOKMARK [0][-]{chapter.41}{for-loop vs stream}{part.7}% 146
\BOOKMARK [0][-]{chapter.42}{Stream methods}{part.7}% 147
\BOOKMARK [1][-]{section.42.1}{min\(\), max\(\)}{chapter.42}% 148
\BOOKMARK [1][-]{section.42.2}{.reduce\(\)}{chapter.42}% 149
\BOOKMARK [2][-]{subsection.42.2.1}{.reduce\(accumulator\)}{section.42.2}% 150
\BOOKMARK [2][-]{subsection.42.2.2}{.reduce\(identity, accumulator\)}{section.42.2}% 151
\BOOKMARK [2][-]{subsection.42.2.3}{.reduce\(identity, accumulator, combiner\)}{section.42.2}% 152
\BOOKMARK [1][-]{section.42.3}{.collect\(Collector..\)}{chapter.42}% 153
\BOOKMARK [2][-]{subsection.42.3.1}{Partitoning, Grouping}{section.42.3}% 154
\BOOKMARK [2][-]{subsection.42.3.2}{Summarizing}{section.42.3}% 155
\BOOKMARK [2][-]{subsection.42.3.3}{Custom collector}{section.42.3}% 156
\BOOKMARK [1][-]{section.42.4}{Sorting}{chapter.42}% 157
\BOOKMARK [2][-]{subsection.42.4.1}{.sorted\(\)}{section.42.4}% 158
\BOOKMARK [2][-]{subsection.42.4.2}{.sorted\(Comparator.comparing\(a -> b\)\)}{section.42.4}% 159
\BOOKMARK [0][-]{chapter.43}{Ordering}{part.7}% 160
\BOOKMARK [0][-]{chapter.44}{Streamming Primitive Types}{part.7}% 161
\BOOKMARK [1][-]{section.44.1}{Key Ponts}{chapter.44}% 162
\BOOKMARK [1][-]{section.44.2}{Conversion to Primitive Stream and back}{chapter.44}% 163
\BOOKMARK [1][-]{section.44.3}{.summaryStatistics\(\)}{chapter.44}% 164
\BOOKMARK [0][-]{chapter.45}{Streaming a String}{part.7}% 165
\BOOKMARK [1][-]{section.45.1}{String Representation of Collections}{chapter.45}% 166
\BOOKMARK [0][-]{chapter.46}{Streaming Arrays}{part.7}% 167
\BOOKMARK [0][-]{chapter.47}{Support Classes, Interfaces and Methods}{part.7}% 168
\BOOKMARK [1][-]{section.47.1}{Collector interface}{chapter.47}% 169
\BOOKMARK [2][-]{subsection.47.1.1}{supplier}{section.47.1}% 170
\BOOKMARK [2][-]{subsection.47.1.2}{accumulator}{section.47.1}% 171
\BOOKMARK [2][-]{subsection.47.1.3}{combiner}{section.47.1}% 172
\BOOKMARK [2][-]{subsection.47.1.4}{finisher}{section.47.1}% 173
\BOOKMARK [2][-]{subsection.47.1.5}{characteristic}{section.47.1}% 174
\BOOKMARK [1][-]{section.47.2}{IntStream}{chapter.47}% 175
\BOOKMARK [2][-]{subsection.47.2.1}{.of\(ints\)}{section.47.2}% 176
\BOOKMARK [2][-]{subsection.47.2.2}{.range\(lb, up\)}{section.47.2}% 177
\BOOKMARK [2][-]{subsection.47.2.3}{.rangeClosed\(lb, up\)}{section.47.2}% 178
\BOOKMARK [2][-]{subsection.47.2.4}{.iterator\(lb, next\).limit\(n\)}{section.47.2}% 179
\BOOKMARK [2][-]{subsection.47.2.5}{.generate\(intSupplier s\)}{section.47.2}% 180
\BOOKMARK [2][-]{subsection.47.2.6}{.boxed\(\)}{section.47.2}% 181
\BOOKMARK [1][-]{section.47.3}{Stream}{chapter.47}% 182
\BOOKMARK [2][-]{subsection.47.3.1}{.of\(objects\)}{section.47.3}% 183
\BOOKMARK [0][-]{chapter.48}{Patterns \046 Idioms Using Aggregate operations}{part.7}% 184
\BOOKMARK [-1][-]{part.8}{VIII Library Classes}{}% 185
\BOOKMARK [0][-]{chapter.49}{Scanner}{part.8}% 186
\BOOKMARK [1][-]{section.49.1}{Key Points:}{chapter.49}% 187
\BOOKMARK [1][-]{section.49.2}{InputMismatchException}{chapter.49}% 188
\BOOKMARK [1][-]{section.49.3}{hasNext\(\), eof}{chapter.49}% 189
\BOOKMARK [1][-]{section.49.4}{nextLine\(\)}{chapter.49}% 190
\BOOKMARK [0][-]{chapter.50}{Integer}{part.8}% 191
\BOOKMARK [1][-]{section.50.1}{Boxing}{chapter.50}% 192
\BOOKMARK [1][-]{section.50.2}{Unboxing}{chapter.50}% 193
\BOOKMARK [1][-]{section.50.3}{Conversion from String}{chapter.50}% 194
\BOOKMARK [0][-]{chapter.51}{Date \046 Time}{part.8}% 195
\BOOKMARK [1][-]{section.51.1}{Date}{chapter.51}% 196
\BOOKMARK [1][-]{section.51.2}{Date + String.format\(..\)}{chapter.51}% 197
\BOOKMARK [1][-]{section.51.3}{SimpleDateFormat}{chapter.51}% 198
\BOOKMARK [0][-]{chapter.52}{String}{part.8}% 199
\BOOKMARK [1][-]{section.52.1}{CharSequence Interface Family}{chapter.52}% 200
\BOOKMARK [1][-]{section.52.2}{String.format\(pattern, args\)}{chapter.52}% 201
\BOOKMARK [1][-]{section.52.3}{split\(\)}{chapter.52}% 202
\BOOKMARK [0][-]{chapter.53}{java.utils.Arrays}{part.8}% 203
\BOOKMARK [1][-]{section.53.1}{ArrayList from an Array}{chapter.53}% 204
\BOOKMARK [2][-]{subsection.53.1.1}{Sending Arrays.asList\(array\) to ArrayList constructor}{section.53.1}% 205
\BOOKMARK [2][-]{subsection.53.1.2}{Using collections.addAll\(arrayList, array\).}{section.53.1}% 206
\BOOKMARK [2][-]{subsection.53.1.3}{Arrays.asList\(array\)}{section.53.1}% 207
\BOOKMARK [0][-]{chapter.54}{Random}{part.8}% 208
\BOOKMARK [1][-]{section.54.1}{Math.random\(\)}{chapter.54}% 209
\BOOKMARK [1][-]{section.54.2}{Random class}{chapter.54}% 210
\BOOKMARK [1][-]{section.54.3}{Random class vs Math.random\(\)}{chapter.54}% 211
\BOOKMARK [1][-]{section.54.4}{Comparable}{chapter.54}% 212
\BOOKMARK [-1][-]{part.9}{IX Advanced Topics}{}% 213
\BOOKMARK [0][-]{section.54.5}{Reflection}{part.9}% 214
\BOOKMARK [1][-]{section.54.6}{Immutability}{section.54.5}% 215
\BOOKMARK [2][-]{subsection.54.6.1}{Implementing Immutability}{section.54.6}% 216
\BOOKMARK [1][-]{section.54.7}{Default Methods}{section.54.5}% 217
\BOOKMARK [0][-]{chapter.55}{Data Parallelism}{part.9}% 218
\BOOKMARK [1][-]{section.55.1}{Intro}{chapter.55}% 219
\BOOKMARK [2][-]{subsection.55.1.1}{Notions}{section.55.1}% 220
\BOOKMARK [1][-]{section.55.2}{Impact on Performance}{chapter.55}% 221
\BOOKMARK [1][-]{section.55.3}{Parallel Stream Operations}{chapter.55}% 222
\BOOKMARK [1][-]{section.55.4}{Caveats}{chapter.55}% 223
\BOOKMARK [2][-]{subsection.55.4.1}{Parallel .reduce\(\)}{section.55.4}% 224
\BOOKMARK [-1][-]{part.10}{X Idioms}{}% 225
\BOOKMARK [0][-]{chapter.56}{Exceptions}{part.10}% 226
\BOOKMARK [-1][-]{part.11}{XI UML modelling}{}% 227
\BOOKMARK [0][-]{chapter.57}{Domain Modelling}{part.11}% 228
\BOOKMARK [1][-]{section.57.1}{Inheritance}{chapter.57}% 229
\BOOKMARK [1][-]{section.57.2}{Association}{chapter.57}% 230
\BOOKMARK [0][-]{chapter.58}{Class Diagram}{part.11}% 231
\BOOKMARK [-1][-]{part.12}{XII Design Concepts}{}% 232
\BOOKMARK [0][-]{chapter.59}{Dependencies}{part.12}% 233
\BOOKMARK [1][-]{section.59.1}{Overview}{chapter.59}% 234
\BOOKMARK [1][-]{section.59.2}{Dependency as a Type of Relationship}{chapter.59}% 235
\BOOKMARK [1][-]{section.59.3}{Types of dependencies}{chapter.59}% 236
\BOOKMARK [1][-]{section.59.4}{Hidden Dependency}{chapter.59}% 237
\BOOKMARK [1][-]{section.59.5}{Indirect Dependencies}{chapter.59}% 238
\BOOKMARK [1][-]{section.59.6}{Local and Context Depedences}{chapter.59}% 239
\BOOKMARK [-1][-]{part.13}{XIII Antipatterns, Code Smells}{}% 240
\BOOKMARK [0][-]{chapter.60}{AutoBoxing, Unboxing}{part.13}% 241
\BOOKMARK [0][-]{chapter.61}{Constructors}{part.13}% 242
\BOOKMARK [1][-]{section.61.1}{Constructor Calls an Overridable Method}{chapter.61}% 243
\BOOKMARK [-1][-]{part.14}{XIV Testing}{}% 244
\BOOKMARK [0][-]{chapter.62}{JUnit}{part.14}% 245
\BOOKMARK [1][-]{section.62.1}{Unit testing}{chapter.62}% 246
\BOOKMARK [-1][-]{part.15}{XV Varia}{}% 247
\BOOKMARK [0][-]{chapter.63}{Compact Strings}{part.15}% 248
\BOOKMARK [-1][-]{part.16}{XVI Appendix}{}% 249
\BOOKMARK [0][-]{chapter.64}{Vocabulary}{part.16}% 250
\BOOKMARK [1][-]{section.64.1}{B}{chapter.64}% 251
\BOOKMARK [2][-]{subsection.64.1.1}{binding}{section.64.1}% 252
\BOOKMARK [1][-]{section.64.2}{C}{chapter.64}% 253
\BOOKMARK [2][-]{subsection.64.2.1}{composition}{section.64.2}% 254
\BOOKMARK [2][-]{subsection.64.2.2}{covariant}{section.64.2}% 255
\BOOKMARK [1][-]{section.64.3}{D}{chapter.64}% 256
\BOOKMARK [2][-]{subsection.64.3.1}{depedency}{section.64.3}% 257
\BOOKMARK [2][-]{subsection.64.3.2}{dynamic binding}{section.64.3}% 258
\BOOKMARK [1][-]{section.64.4}{E}{chapter.64}% 259
\BOOKMARK [2][-]{subsection.64.4.1}{encapsulation}{section.64.4}% 260
\BOOKMARK [1][-]{section.64.5}{H}{chapter.64}% 261
\BOOKMARK [2][-]{subsection.64.5.1}{has-a relationship}{section.64.5}% 262
\BOOKMARK [1][-]{section.64.6}{I}{chapter.64}% 263
\BOOKMARK [2][-]{subsection.64.6.1}{interface}{section.64.6}% 264
\BOOKMARK [2][-]{subsection.64.6.2}{invariant}{section.64.6}% 265
\BOOKMARK [1][-]{section.64.7}{L}{chapter.64}% 266
\BOOKMARK [2][-]{subsection.64.7.1}{late binding}{section.64.7}% 267
\BOOKMARK [1][-]{section.64.8}{M}{chapter.64}% 268
\BOOKMARK [2][-]{subsection.64.8.1}{members of class}{section.64.8}% 269
\BOOKMARK [1][-]{section.64.9}{N}{chapter.64}% 270
\BOOKMARK [2][-]{subsection.64.9.1}{non-interfering}{section.64.9}% 271
\BOOKMARK [1][-]{section.64.10}{P}{chapter.64}% 272
\BOOKMARK [2][-]{subsection.64.10.1}{polymorphism}{section.64.10}% 273
\BOOKMARK [2][-]{subsection.64.10.2}{problem space}{section.64.10}% 274
\BOOKMARK [1][-]{section.64.11}{R}{chapter.64}% 275
\BOOKMARK [2][-]{subsection.64.11.1}{RTTI}{section.64.11}% 276
\BOOKMARK [2][-]{subsection.64.11.2}{runtime binding}{section.64.11}% 277
\BOOKMARK [1][-]{section.64.12}{S}{chapter.64}% 278
\BOOKMARK [2][-]{subsection.64.12.1}{short circuiting}{section.64.12}% 279
\BOOKMARK [2][-]{subsection.64.12.2}{solution space}{section.64.12}% 280
\BOOKMARK [2][-]{subsection.64.12.3}{stateful}{section.64.12}% 281
\BOOKMARK [2][-]{subsection.64.12.4}{stateless}{section.64.12}% 282
\BOOKMARK [1][-]{section.64.13}{U}{chapter.64}% 283
\BOOKMARK [2][-]{subsection.64.13.1}{upcasting}{section.64.13}% 284
\BOOKMARK [0][-]{chapter.65}{Docs, Specs}{part.16}% 285
\BOOKMARK [1][-]{section.65.1}{Java Doc}{chapter.65}% 286
