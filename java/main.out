\BOOKMARK [0][-]{chapter.1}{TODOs}{}% 1
\BOOKMARK [0][-]{chapter.2}{Use It Later}{}% 2
\BOOKMARK [0][-]{chapter.3}{Resources}{}% 3
\BOOKMARK [0][-]{chapter.4}{Basics}{}% 4
\BOOKMARK [1][-]{section.4.1}{Overview}{chapter.4}% 5
\BOOKMARK [1][-]{section.4.2}{Identifiers}{chapter.4}% 6
\BOOKMARK [2][-]{subsection.4.2.1}{Scope Rules}{section.4.2}% 7
\BOOKMARK [2][-]{subsection.4.2.2}{Name Conflicts.}{section.4.2}% 8
\BOOKMARK [1][-]{section.4.3}{Primitive Types}{chapter.4}% 9
\BOOKMARK [2][-]{subsection.4.3.1}{List of Types}{section.4.3}% 10
\BOOKMARK [2][-]{subsection.4.3.2}{Conversion}{section.4.3}% 11
\BOOKMARK [2][-]{subsection.4.3.3}{Primitive Type Specialisation \(from java8\)}{section.4.3}% 12
\BOOKMARK [1][-]{section.4.4}{Switch Statement}{chapter.4}% 13
\BOOKMARK [1][-]{section.4.5}{Text-based User Input}{chapter.4}% 14
\BOOKMARK [0][-]{chapter.5}{Advanced Topics}{}% 15
\BOOKMARK [1][-]{section.5.1}{Default Methods}{chapter.5}% 16
\BOOKMARK [0][-]{chapter.6}{Lambda Expressions}{}% 17
\BOOKMARK [1][-]{section.6.1}{Motivation}{chapter.6}% 18
\BOOKMARK [1][-]{section.6.2}{Lambda Expressions - Overview}{chapter.6}% 19
\BOOKMARK [1][-]{section.6.3}{Target Type, Type Inference}{chapter.6}% 20
\BOOKMARK [1][-]{section.6.4}{Use of External values by Lambda}{chapter.6}% 21
\BOOKMARK [1][-]{section.6.5}{Lambda Graphically}{chapter.6}% 22
\BOOKMARK [1][-]{section.6.6}{Core Functional Interfaces}{chapter.6}% 23
\BOOKMARK [1][-]{section.6.7}{Custom Functional Interfaces}{chapter.6}% 24
\BOOKMARK [1][-]{section.6.8}{Method References}{chapter.6}% 25
\BOOKMARK [2][-]{subsection.6.8.1}{Applications}{section.6.8}% 26
\BOOKMARK [0][-]{chapter.7}{Aggregate Operations \(streams\)}{}% 27
\BOOKMARK [1][-]{section.7.1}{Motivation}{chapter.7}% 28
\BOOKMARK [1][-]{section.7.2}{for-loop vs stream}{chapter.7}% 29
\BOOKMARK [1][-]{section.7.3}{Stream methods}{chapter.7}% 30
\BOOKMARK [1][-]{section.7.4}{Ordering}{chapter.7}% 31
\BOOKMARK [1][-]{section.7.5}{Collectors}{chapter.7}% 32
\BOOKMARK [1][-]{section.7.6}{Patterns \046 Idioms Using Aggregate operations}{chapter.7}% 33
\BOOKMARK [0][-]{chapter.8}{Data Parallelism}{}% 34
\BOOKMARK [1][-]{section.8.1}{Intro}{chapter.8}% 35
\BOOKMARK [2][-]{subsection.8.1.1}{Notions}{section.8.1}% 36
\BOOKMARK [1][-]{section.8.2}{Impact on Performance}{chapter.8}% 37
\BOOKMARK [1][-]{section.8.3}{Parallel Stream Operations}{chapter.8}% 38
\BOOKMARK [1][-]{section.8.4}{Caveats}{chapter.8}% 39
\BOOKMARK [2][-]{subsection.8.4.1}{Parallel .reduce\(\)}{section.8.4}% 40
\BOOKMARK [1][-]{section.8.5}{Arrays}{chapter.8}% 41
\BOOKMARK [0][-]{chapter.9}{Utilities}{}% 42
\BOOKMARK [1][-]{section.9.1}{Scanner}{chapter.9}% 43
\BOOKMARK [0][-]{chapter.10}{Antipatterns, Code Smells}{}% 44
\BOOKMARK [1][-]{section.10.1}{AutoBoxing, Unboxing}{chapter.10}% 45
\BOOKMARK [0][-]{chapter.11}{Docs, Specs}{}% 46
\BOOKMARK [1][-]{section.11.1}{Java Doc}{chapter.11}% 47
