\BOOKMARK [-1][-]{part.1}{I Intro}{}% 1
\BOOKMARK [0][-]{chapter.1}{TODOs}{part.1}% 2
\BOOKMARK [1][-]{section.1.1}{Readings}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{Research Topics and Tasks}{chapter.1}% 4
\BOOKMARK [0][-]{chapter.2}{Resources}{part.1}% 5
\BOOKMARK [-1][-]{part.2}{II Basics}{}% 6
\BOOKMARK [0][-]{chapter.3}{Overview}{part.2}% 7
\BOOKMARK [0][-]{chapter.4}{Identifiers}{part.2}% 8
\BOOKMARK [1][-]{section.4.1}{Informal Single-Letter Local Variables Naming}{chapter.4}% 9
\BOOKMARK [1][-]{section.4.2}{Scope Rules}{chapter.4}% 10
\BOOKMARK [2][-]{subsection.4.2.1}{Name Conflicts.}{section.4.2}% 11
\BOOKMARK [0][-]{chapter.5}{Modifiers}{part.2}% 12
\BOOKMARK [1][-]{section.5.1}{Access Modifiers}{chapter.5}% 13
\BOOKMARK [1][-]{section.5.2}{Recommendation on How to Use Access Modifiers}{chapter.5}% 14
\BOOKMARK [2][-]{subsection.5.2.1}{public}{section.5.2}% 15
\BOOKMARK [2][-]{subsection.5.2.2}{protected}{section.5.2}% 16
\BOOKMARK [1][-]{section.5.3}{Other modifiers}{chapter.5}% 17
\BOOKMARK [0][-]{chapter.6}{Primitive Types}{part.2}% 18
\BOOKMARK [1][-]{section.6.1}{List of Types}{chapter.6}% 19
\BOOKMARK [1][-]{section.6.2}{Conversion}{chapter.6}% 20
\BOOKMARK [1][-]{section.6.3}{Primitive Type Specialisation \(from java8\)}{chapter.6}% 21
\BOOKMARK [0][-]{chapter.7}{Reference Types}{part.2}% 22
\BOOKMARK [1][-]{section.7.1}{List of Reference Types}{chapter.7}% 23
\BOOKMARK [1][-]{section.7.2}{Reference vs Primitive Types}{chapter.7}% 24
\BOOKMARK [1][-]{section.7.3}{Default Values}{chapter.7}% 25
\BOOKMARK [2][-]{subsection.7.3.1}{Objects}{section.7.3}% 26
\BOOKMARK [2][-]{subsection.7.3.2}{Arrays}{section.7.3}% 27
\BOOKMARK [1][-]{section.7.4}{Object Instantiation}{chapter.7}% 28
\BOOKMARK [2][-]{subsection.7.4.1}{Class Loading}{section.7.4}% 29
\BOOKMARK [2][-]{subsection.7.4.2}{Static Initialsation}{section.7.4}% 30
\BOOKMARK [2][-]{subsection.7.4.3}{Class Variables Initialisation}{section.7.4}% 31
\BOOKMARK [2][-]{subsection.7.4.4}{Constructor Calls}{section.7.4}% 32
\BOOKMARK [1][-]{section.7.5}{Cloning}{chapter.7}% 33
\BOOKMARK [2][-]{subsection.7.5.1}{Overview}{section.7.5}% 34
\BOOKMARK [2][-]{subsection.7.5.2}{Switching Cloneability}{section.7.5}% 35
\BOOKMARK [2][-]{subsection.7.5.3}{Shallow Cloning}{section.7.5}% 36
\BOOKMARK [2][-]{subsection.7.5.4}{Deep Cloning}{section.7.5}% 37
\BOOKMARK [2][-]{subsection.7.5.5}{Serialisation and Copy Constructor}{section.7.5}% 38
\BOOKMARK [0][-]{chapter.8}{Arrays}{part.2}% 39
\BOOKMARK [1][-]{section.8.1}{Permitted Element types}{chapter.8}% 40
\BOOKMARK [1][-]{section.8.2}{Definition, Instantiation, Initialisation}{chapter.8}% 41
\BOOKMARK [2][-]{subsection.8.2.1}{Definition}{section.8.2}% 42
\BOOKMARK [2][-]{subsection.8.2.2}{Instantiation}{section.8.2}% 43
\BOOKMARK [2][-]{subsection.8.2.3}{Initialisation}{section.8.2}% 44
\BOOKMARK [1][-]{section.8.3}{Anonymous Arrays}{chapter.8}% 45
\BOOKMARK [1][-]{section.8.4}{Converting a List to an Array}{chapter.8}% 46
\BOOKMARK [2][-]{subsection.8.4.1}{list.toArray\(\)}{section.8.4}% 47
\BOOKMARK [2][-]{subsection.8.4.2}{list.toArray\(T[]\)}{section.8.4}% 48
\BOOKMARK [2][-]{subsection.8.4.3}{list.stream\(\).toArray\(T::new\);}{section.8.4}% 49
\BOOKMARK [1][-]{section.8.5}{Type Conversion}{chapter.8}% 50
\BOOKMARK [0][-]{chapter.9}{if/else}{part.2}% 51
\BOOKMARK [1][-]{section.9.1}{Nested if's problem}{chapter.9}% 52
\BOOKMARK [1][-]{section.9.2}{else if}{chapter.9}% 53
\BOOKMARK [0][-]{chapter.10}{Switch Statement}{part.2}% 54
\BOOKMARK [0][-]{chapter.11}{Labels}{part.2}% 55
\BOOKMARK [0][-]{chapter.12}{Text-based User Input}{part.2}% 56
\BOOKMARK [1][-]{section.12.1}{Program Arguments}{chapter.12}% 57
\BOOKMARK [1][-]{section.12.2}{Using an Object of Scanner Class}{chapter.12}% 58
\BOOKMARK [2][-]{subsection.12.2.1}{Conversions}{section.12.2}% 59
\BOOKMARK [2][-]{subsection.12.2.2}{Comparison Objects}{section.12.2}% 60
\BOOKMARK [2][-]{subsection.12.2.3}{Comparing String Objects}{section.12.2}% 61
\BOOKMARK [2][-]{subsection.12.2.4}{Copying}{section.12.2}% 62
\BOOKMARK [0][-]{chapter.13}{Constructors}{part.2}% 63
\BOOKMARK [1][-]{section.13.1}{Constructor Chaining}{chapter.13}% 64
\BOOKMARK [1][-]{section.13.2}{Practices}{chapter.13}% 65
\BOOKMARK [2][-]{subsection.13.2.1}{Define no-arg Constructor when a Constructor Taking Arguments Is Present }{section.13.2}% 66
\BOOKMARK [2][-]{subsection.13.2.2}{Never Call Overridable Method from within a Constructor}{section.13.2}% 67
\BOOKMARK [0][-]{chapter.14}{this}{part.2}% 68
\BOOKMARK [0][-]{chapter.15}{super}{part.2}% 69
\BOOKMARK [1][-]{section.15.1}{super.a\(\) vs. \(\(<T>\)this\).a\(\)}{chapter.15}% 70
\BOOKMARK [0][-]{chapter.16}{Exceptions}{part.2}% 71
\BOOKMARK [1][-]{section.16.1}{Types}{chapter.16}% 72
\BOOKMARK [1][-]{section.16.2}{Try Blocks}{chapter.16}% 73
\BOOKMARK [1][-]{section.16.3}{Important Points}{chapter.16}% 74
\BOOKMARK [1][-]{section.16.4}{Catch or Declare Rule}{chapter.16}% 75
\BOOKMARK [1][-]{section.16.5}{Overriding a method Throwing an Exception}{chapter.16}% 76
\BOOKMARK [1][-]{section.16.6}{Custom Exception}{chapter.16}% 77
\BOOKMARK [1][-]{section.16.7}{Useful methods}{chapter.16}% 78
\BOOKMARK [0][-]{chapter.17}{Abstract Classes \046 Methods}{part.2}% 79
\BOOKMARK [1][-]{section.17.1}{Usage}{chapter.17}% 80
\BOOKMARK [1][-]{section.17.2}{Abstract Classes vs interfaces}{chapter.17}% 81
\BOOKMARK [0][-]{chapter.18}{Varargs}{part.2}% 82
\BOOKMARK [0][-]{chapter.19}{Static}{part.2}% 83
\BOOKMARK [1][-]{section.19.1}{Usage}{chapter.19}% 84
\BOOKMARK [1][-]{section.19.2}{Static Initialisers}{chapter.19}% 85
\BOOKMARK [0][-]{chapter.20}{Interfaces}{part.2}% 86
\BOOKMARK [1][-]{section.20.1}{Interfaces vs Abstract Classes}{chapter.20}% 87
\BOOKMARK [0][-]{chapter.21}{Enumerations}{part.2}% 88
\BOOKMARK [1][-]{section.21.1}{Iteration\)}{chapter.21}% 89
\BOOKMARK [0][-]{chapter.22}{Annotations}{part.2}% 90
\BOOKMARK [1][-]{section.22.1}{Built-in}{chapter.22}% 91
\BOOKMARK [0][-]{chapter.23}{Inner Classes}{part.2}% 92
\BOOKMARK [1][-]{section.23.1}{Overview}{chapter.23}% 93
\BOOKMARK [1][-]{section.23.2}{localisation within a Code}{chapter.23}% 94
\BOOKMARK [1][-]{section.23.3}{Motivation}{chapter.23}% 95
\BOOKMARK [0][-]{chapter.24}{Inner Static Class}{part.2}% 96
\BOOKMARK [1][-]{section.24.1}{Overview}{chapter.24}% 97
\BOOKMARK [-1][-]{part.3}{III IO}{}% 98
\BOOKMARK [0][-]{chapter.25}{Reading a File - BufferedReader}{part.3}% 99
\BOOKMARK [0][-]{chapter.26}{Writing to a File}{part.3}% 100
\BOOKMARK [0][-]{chapter.27}{Serialisation}{part.3}% 101
\BOOKMARK [1][-]{section.27.1}{Writing - ObjectOutputStream.writeObject\(Object o\)}{chapter.27}% 102
\BOOKMARK [1][-]{section.27.2}{Reading - ObjectInputStream.readObject\(Object o\)}{chapter.27}% 103
\BOOKMARK [-1][-]{part.4}{IV Collections}{}% 104
\BOOKMARK [0][-]{chapter.28}{Iterator}{part.4}% 105
\BOOKMARK [0][-]{chapter.29}{Common Methods}{part.4}% 106
\BOOKMARK [0][-]{chapter.30}{Map}{part.4}% 107
\BOOKMARK [1][-]{section.30.1}{Literal Initialisation}{chapter.30}% 108
\BOOKMARK [1][-]{section.30.2}{HashMap}{chapter.30}% 109
\BOOKMARK [0][-]{chapter.31}{ArrayList}{part.4}% 110
\BOOKMARK [1][-]{section.31.1}{Converting a List to an Array}{chapter.31}% 111
\BOOKMARK [2][-]{subsection.31.1.1}{list.toArray\(\)}{section.31.1}% 112
\BOOKMARK [2][-]{subsection.31.1.2}{list.toArray\(T[]\)}{section.31.1}% 113
\BOOKMARK [2][-]{subsection.31.1.3}{list.stream\(\).toArray\(T[]::new\);}{section.31.1}% 114
\BOOKMARK [-1][-]{part.5}{V Lambda Expressions}{}% 115
\BOOKMARK [0][-]{chapter.32}{Lambda Expressions}{part.5}% 116
\BOOKMARK [1][-]{section.32.1}{Motivation}{chapter.32}% 117
\BOOKMARK [1][-]{section.32.2}{Lambda Expressions - Overview}{chapter.32}% 118
\BOOKMARK [1][-]{section.32.3}{Target Type, Type Inference}{chapter.32}% 119
\BOOKMARK [1][-]{section.32.4}{Use of External values by Lambda}{chapter.32}% 120
\BOOKMARK [1][-]{section.32.5}{Lambda Graphically}{chapter.32}% 121
\BOOKMARK [1][-]{section.32.6}{SAMs, Core Functional Interfaces}{chapter.32}% 122
\BOOKMARK [1][-]{section.32.7}{Custom Functional Interfaces}{chapter.32}% 123
\BOOKMARK [1][-]{section.32.8}{Method References}{chapter.32}% 124
\BOOKMARK [2][-]{subsection.32.8.1}{Static Method Reference}{section.32.8}% 125
\BOOKMARK [2][-]{subsection.32.8.2}{Instance Method Reference}{section.32.8}% 126
\BOOKMARK [2][-]{subsection.32.8.3}{Referencing a Method of an Arbitrary Object of a Particular Type}{section.32.8}% 127
\BOOKMARK [2][-]{subsection.32.8.4}{Referencing a Constructor}{section.32.8}% 128
\BOOKMARK [2][-]{subsection.32.8.5}{Applications}{section.32.8}% 129
\BOOKMARK [1][-]{section.32.9}{Overloading}{chapter.32}% 130
\BOOKMARK [-1][-]{part.6}{VI Aggregate Operations \(streams\)}{}% 131
\BOOKMARK [0][-]{chapter.33}{Motivation}{part.6}% 132
\BOOKMARK [0][-]{chapter.34}{for-loop vs stream}{part.6}% 133
\BOOKMARK [0][-]{chapter.35}{Stream methods}{part.6}% 134
\BOOKMARK [1][-]{section.35.1}{min\(\), max\(\)}{chapter.35}% 135
\BOOKMARK [1][-]{section.35.2}{.reduce\(\)}{chapter.35}% 136
\BOOKMARK [2][-]{subsection.35.2.1}{.reduce\(accumulator\)}{section.35.2}% 137
\BOOKMARK [2][-]{subsection.35.2.2}{.reduce\(identity, accumulator\)}{section.35.2}% 138
\BOOKMARK [2][-]{subsection.35.2.3}{.reduce\(identity, accumulator, combiner\)}{section.35.2}% 139
\BOOKMARK [1][-]{section.35.3}{.collect\(Collector..\)}{chapter.35}% 140
\BOOKMARK [2][-]{subsection.35.3.1}{Partitoning, Grouping}{section.35.3}% 141
\BOOKMARK [2][-]{subsection.35.3.2}{Summarizing}{section.35.3}% 142
\BOOKMARK [2][-]{subsection.35.3.3}{Custom collector}{section.35.3}% 143
\BOOKMARK [1][-]{section.35.4}{Sorting}{chapter.35}% 144
\BOOKMARK [2][-]{subsection.35.4.1}{.sorted\(\)}{section.35.4}% 145
\BOOKMARK [2][-]{subsection.35.4.2}{.sorted\(Comparator.comparing\(a -> b\)\)}{section.35.4}% 146
\BOOKMARK [0][-]{chapter.36}{Ordering}{part.6}% 147
\BOOKMARK [0][-]{chapter.37}{Streamming Primitive Types}{part.6}% 148
\BOOKMARK [1][-]{section.37.1}{Key Ponts}{chapter.37}% 149
\BOOKMARK [1][-]{section.37.2}{Conversion to Primitive Stream and back}{chapter.37}% 150
\BOOKMARK [1][-]{section.37.3}{.summaryStatistics\(\)}{chapter.37}% 151
\BOOKMARK [0][-]{chapter.38}{Streaming a String}{part.6}% 152
\BOOKMARK [1][-]{section.38.1}{String Representation of Collections}{chapter.38}% 153
\BOOKMARK [0][-]{chapter.39}{Streaming Arrays}{part.6}% 154
\BOOKMARK [0][-]{chapter.40}{Support Classes, Interfaces and Methods}{part.6}% 155
\BOOKMARK [1][-]{section.40.1}{Collector interface}{chapter.40}% 156
\BOOKMARK [2][-]{subsection.40.1.1}{supplier}{section.40.1}% 157
\BOOKMARK [2][-]{subsection.40.1.2}{accumulator}{section.40.1}% 158
\BOOKMARK [2][-]{subsection.40.1.3}{combiner}{section.40.1}% 159
\BOOKMARK [2][-]{subsection.40.1.4}{finisher}{section.40.1}% 160
\BOOKMARK [2][-]{subsection.40.1.5}{characteristic}{section.40.1}% 161
\BOOKMARK [1][-]{section.40.2}{IntStream}{chapter.40}% 162
\BOOKMARK [2][-]{subsection.40.2.1}{.of\(ints\)}{section.40.2}% 163
\BOOKMARK [2][-]{subsection.40.2.2}{.range\(lb, up\)}{section.40.2}% 164
\BOOKMARK [2][-]{subsection.40.2.3}{.rangeClosed\(lb, up\)}{section.40.2}% 165
\BOOKMARK [2][-]{subsection.40.2.4}{.iterator\(lb, next\).limit\(n\)}{section.40.2}% 166
\BOOKMARK [2][-]{subsection.40.2.5}{.generate\(intSupplier s\)}{section.40.2}% 167
\BOOKMARK [2][-]{subsection.40.2.6}{.boxed\(\)}{section.40.2}% 168
\BOOKMARK [1][-]{section.40.3}{Stream}{chapter.40}% 169
\BOOKMARK [2][-]{subsection.40.3.1}{.of\(objects\)}{section.40.3}% 170
\BOOKMARK [0][-]{chapter.41}{Patterns \046 Idioms Using Aggregate operations}{part.6}% 171
\BOOKMARK [-1][-]{part.7}{VII Library Classes}{}% 172
\BOOKMARK [0][-]{chapter.42}{Scanner}{part.7}% 173
\BOOKMARK [1][-]{section.42.1}{Key Points:}{chapter.42}% 174
\BOOKMARK [1][-]{section.42.2}{InputMismatchException}{chapter.42}% 175
\BOOKMARK [1][-]{section.42.3}{hasNext\(\), eof}{chapter.42}% 176
\BOOKMARK [1][-]{section.42.4}{nextLine\(\)}{chapter.42}% 177
\BOOKMARK [0][-]{chapter.43}{Integer}{part.7}% 178
\BOOKMARK [1][-]{section.43.1}{Boxing}{chapter.43}% 179
\BOOKMARK [1][-]{section.43.2}{Unboxing}{chapter.43}% 180
\BOOKMARK [1][-]{section.43.3}{Conversion from String}{chapter.43}% 181
\BOOKMARK [0][-]{chapter.44}{Date \046 Time}{part.7}% 182
\BOOKMARK [1][-]{section.44.1}{Date}{chapter.44}% 183
\BOOKMARK [1][-]{section.44.2}{Date + String.format\(..\)}{chapter.44}% 184
\BOOKMARK [1][-]{section.44.3}{SimpleDateFormat}{chapter.44}% 185
\BOOKMARK [0][-]{chapter.45}{String}{part.7}% 186
\BOOKMARK [1][-]{section.45.1}{CharSequence Interface Family}{chapter.45}% 187
\BOOKMARK [1][-]{section.45.2}{String.format\(pattern, args\)}{chapter.45}% 188
\BOOKMARK [1][-]{section.45.3}{split\(\)}{chapter.45}% 189
\BOOKMARK [0][-]{chapter.46}{java.utils.Arrays}{part.7}% 190
\BOOKMARK [1][-]{section.46.1}{ArrayList from an Array}{chapter.46}% 191
\BOOKMARK [2][-]{subsection.46.1.1}{Sending Arrays.asList\(array\) to ArrayList constructor}{section.46.1}% 192
\BOOKMARK [2][-]{subsection.46.1.2}{Using collections.addAll\(arrayList, array\).}{section.46.1}% 193
\BOOKMARK [2][-]{subsection.46.1.3}{Arrays.asList\(array\)}{section.46.1}% 194
\BOOKMARK [0][-]{chapter.47}{Random}{part.7}% 195
\BOOKMARK [1][-]{section.47.1}{Math.random\(\)}{chapter.47}% 196
\BOOKMARK [1][-]{section.47.2}{Random class}{chapter.47}% 197
\BOOKMARK [1][-]{section.47.3}{Random class vs Math.random\(\)}{chapter.47}% 198
\BOOKMARK [1][-]{section.47.4}{Comparable}{chapter.47}% 199
\BOOKMARK [-1][-]{part.8}{VIII Advanced Topics}{}% 200
\BOOKMARK [0][-]{section.47.5}{Reflection}{part.8}% 201
\BOOKMARK [1][-]{section.47.6}{Immutability}{section.47.5}% 202
\BOOKMARK [2][-]{subsection.47.6.1}{Implementing Immutability}{section.47.6}% 203
\BOOKMARK [1][-]{section.47.7}{Default Methods}{section.47.5}% 204
\BOOKMARK [0][-]{chapter.48}{Data Parallelism}{part.8}% 205
\BOOKMARK [1][-]{section.48.1}{Intro}{chapter.48}% 206
\BOOKMARK [2][-]{subsection.48.1.1}{Notions}{section.48.1}% 207
\BOOKMARK [1][-]{section.48.2}{Impact on Performance}{chapter.48}% 208
\BOOKMARK [1][-]{section.48.3}{Parallel Stream Operations}{chapter.48}% 209
\BOOKMARK [1][-]{section.48.4}{Caveats}{chapter.48}% 210
\BOOKMARK [2][-]{subsection.48.4.1}{Parallel .reduce\(\)}{section.48.4}% 211
\BOOKMARK [-1][-]{part.9}{IX Idioms}{}% 212
\BOOKMARK [0][-]{chapter.49}{Exceptions}{part.9}% 213
\BOOKMARK [0][-]{chapter.50}{Dependencies}{part.9}% 214
\BOOKMARK [1][-]{section.50.1}{Overview}{chapter.50}% 215
\BOOKMARK [1][-]{section.50.2}{Dependency as a Type of Relationship}{chapter.50}% 216
\BOOKMARK [1][-]{section.50.3}{Types of dependencies}{chapter.50}% 217
\BOOKMARK [1][-]{section.50.4}{Hidden Dependency}{chapter.50}% 218
\BOOKMARK [1][-]{section.50.5}{Indirect Dependencies}{chapter.50}% 219
\BOOKMARK [1][-]{section.50.6}{Local and Context Depedences}{chapter.50}% 220
\BOOKMARK [-1][-]{part.10}{X Antipatterns, Code Smells}{}% 221
\BOOKMARK [0][-]{chapter.51}{AutoBoxing, Unboxing}{part.10}% 222
\BOOKMARK [0][-]{chapter.52}{Constructors}{part.10}% 223
\BOOKMARK [1][-]{section.52.1}{Constructor Calls an Overridable Method}{chapter.52}% 224
\BOOKMARK [-1][-]{part.11}{XI Testing}{}% 225
\BOOKMARK [0][-]{chapter.53}{JUnit}{part.11}% 226
\BOOKMARK [1][-]{section.53.1}{Unit testing}{chapter.53}% 227
\BOOKMARK [-1][-]{part.12}{XII Varia}{}% 228
\BOOKMARK [0][-]{chapter.54}{Compact Strings}{part.12}% 229
\BOOKMARK [-1][-]{part.13}{XIII Appendix}{}% 230
\BOOKMARK [0][-]{chapter.55}{Vocabulary}{part.13}% 231
\BOOKMARK [1][-]{section.55.1}{B}{chapter.55}% 232
\BOOKMARK [2][-]{subsection.55.1.1}{binding}{section.55.1}% 233
\BOOKMARK [1][-]{section.55.2}{C}{chapter.55}% 234
\BOOKMARK [2][-]{subsection.55.2.1}{composition}{section.55.2}% 235
\BOOKMARK [2][-]{subsection.55.2.2}{covariant}{section.55.2}% 236
\BOOKMARK [1][-]{section.55.3}{D}{chapter.55}% 237
\BOOKMARK [2][-]{subsection.55.3.1}{depedency}{section.55.3}% 238
\BOOKMARK [2][-]{subsection.55.3.2}{dynamic binding}{section.55.3}% 239
\BOOKMARK [1][-]{section.55.4}{E}{chapter.55}% 240
\BOOKMARK [2][-]{subsection.55.4.1}{encapsulation}{section.55.4}% 241
\BOOKMARK [1][-]{section.55.5}{H}{chapter.55}% 242
\BOOKMARK [2][-]{subsection.55.5.1}{has-a relationship}{section.55.5}% 243
\BOOKMARK [1][-]{section.55.6}{I}{chapter.55}% 244
\BOOKMARK [2][-]{subsection.55.6.1}{interface}{section.55.6}% 245
\BOOKMARK [2][-]{subsection.55.6.2}{invariant}{section.55.6}% 246
\BOOKMARK [1][-]{section.55.7}{L}{chapter.55}% 247
\BOOKMARK [2][-]{subsection.55.7.1}{late binding}{section.55.7}% 248
\BOOKMARK [1][-]{section.55.8}{M}{chapter.55}% 249
\BOOKMARK [2][-]{subsection.55.8.1}{members of class}{section.55.8}% 250
\BOOKMARK [1][-]{section.55.9}{N}{chapter.55}% 251
\BOOKMARK [2][-]{subsection.55.9.1}{non-interfering}{section.55.9}% 252
\BOOKMARK [1][-]{section.55.10}{P}{chapter.55}% 253
\BOOKMARK [2][-]{subsection.55.10.1}{polymorphism}{section.55.10}% 254
\BOOKMARK [2][-]{subsection.55.10.2}{problem space}{section.55.10}% 255
\BOOKMARK [1][-]{section.55.11}{R}{chapter.55}% 256
\BOOKMARK [2][-]{subsection.55.11.1}{RTTI}{section.55.11}% 257
\BOOKMARK [2][-]{subsection.55.11.2}{runtime binding}{section.55.11}% 258
\BOOKMARK [1][-]{section.55.12}{S}{chapter.55}% 259
\BOOKMARK [2][-]{subsection.55.12.1}{short circuiting}{section.55.12}% 260
\BOOKMARK [2][-]{subsection.55.12.2}{solution space}{section.55.12}% 261
\BOOKMARK [2][-]{subsection.55.12.3}{stateful}{section.55.12}% 262
\BOOKMARK [2][-]{subsection.55.12.4}{stateless}{section.55.12}% 263
\BOOKMARK [1][-]{section.55.13}{U}{chapter.55}% 264
\BOOKMARK [2][-]{subsection.55.13.1}{upcasting}{section.55.13}% 265
\BOOKMARK [0][-]{chapter.56}{Docs, Specs}{part.13}% 266
\BOOKMARK [1][-]{section.56.1}{Java Doc}{chapter.56}% 267
