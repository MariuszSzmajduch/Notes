\BOOKMARK [-1][-]{part.1}{I Resources}{}% 1
\BOOKMARK [-1][-]{part.2}{II Paradigmes}{}% 2
\BOOKMARK [0][-]{chapter.1}{Abstraction}{part.2}% 3
\BOOKMARK [0][-]{chapter.2}{Inheritance}{part.2}% 4
\BOOKMARK [1][-]{section.2.1}{Accessing Members}{chapter.2}% 5
\BOOKMARK [1][-]{section.2.2}{Pitfalls}{chapter.2}% 6
\BOOKMARK [2][-]{subsection.2.2.1}{Constructor Calls an Overridable Method}{section.2.2}% 7
\BOOKMARK [1][-]{section.2.3}{Liskov Substitution Principle}{chapter.2}% 8
\BOOKMARK [0][-]{chapter.3}{Encapsulation}{part.2}% 9
\BOOKMARK [0][-]{chapter.4}{Polymorphism , Method Overriding}{part.2}% 10
\BOOKMARK [1][-]{section.4.1}{Virtual method Invocation}{chapter.4}% 11
\BOOKMARK [1][-]{section.4.2}{Method Overloading}{chapter.4}% 12
\BOOKMARK [1][-]{section.4.3}{Method Overriding}{chapter.4}% 13
\BOOKMARK [-1][-]{part.3}{III Design Principles}{}% 14
\BOOKMARK [0][-]{chapter.5}{Separate \(Encapsulate\) What Vary from What Stays the Same}{part.3}% 15
\BOOKMARK [0][-]{chapter.6}{Program to an Interface, not an Implementation}{part.3}% 16
\BOOKMARK [0][-]{chapter.7}{Favour Composition over Inheritance}{part.3}% 17
\BOOKMARK [0][-]{chapter.8}{Strive for loosly coupled designs between objects that interact}{part.3}% 18
\BOOKMARK [-1][-]{part.4}{IV Design}{}% 19
\BOOKMARK [0][-]{chapter.9}{Requiremments}{part.4}% 20
\BOOKMARK [1][-]{section.9.1}{Requirement}{chapter.9}% 21
\BOOKMARK [1][-]{section.9.2}{Use Cases}{chapter.9}% 22
\BOOKMARK [0][-]{chapter.10}{Class Diagram}{part.4}% 23
\BOOKMARK [1][-]{section.10.1}{Design}{chapter.10}% 24
\BOOKMARK [2][-]{subsection.10.1.1}{Each Noun in a Use Case or in the Requirements have a Potential to be a Class}{section.10.1}% 25
\BOOKMARK [2][-]{subsection.10.1.2}{[Each Verb in a Use Case can be a Method]}{section.10.1}% 26
\BOOKMARK [1][-]{section.10.2}{Building Blocks}{chapter.10}% 27
\BOOKMARK [2][-]{subsection.10.2.1}{Associations}{section.10.2}% 28
\BOOKMARK [2][-]{subsection.10.2.2}{Methods}{section.10.2}% 29
\BOOKMARK [-1][-]{part.5}{V Creational Patterns}{}% 30
\BOOKMARK [0][-]{chapter.11}{Singleton}{part.5}% 31
\BOOKMARK [1][-]{section.11.1}{Problem Descritpion}{chapter.11}% 32
\BOOKMARK [1][-]{section.11.2}{Implementation}{chapter.11}% 33
\BOOKMARK [-1][-]{part.6}{VI Structural}{}% 34
\BOOKMARK [0][-]{chapter.12}{Decorator}{part.6}% 35
\BOOKMARK [-1][-]{part.7}{VII Behavioural Patterns}{}% 36
\BOOKMARK [0][-]{chapter.13}{Observer}{part.7}% 37
\BOOKMARK [1][-]{section.13.1}{Problem Description}{chapter.13}% 38
\BOOKMARK [1][-]{section.13.2}{Implementation}{chapter.13}% 39
\BOOKMARK [0][-]{chapter.14}{Strategy}{part.7}% 40
\BOOKMARK [1][-]{section.14.1}{Problem Description}{chapter.14}% 41
\BOOKMARK [1][-]{section.14.2}{Anti-Patterns}{chapter.14}% 42
\BOOKMARK [2][-]{subsection.14.2.1}{Voiding by Overriding with Empty Methods}{section.14.2}% 43
\BOOKMARK [2][-]{subsection.14.2.2}{Tag Subclasses with Interfaces}{section.14.2}% 44
\BOOKMARK [1][-]{section.14.3}{Impementation}{chapter.14}% 45
